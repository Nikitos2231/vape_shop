create table man(
                    user_id int primary key generated by default as identity,
                    user_email varchar not null unique,
                    user_password varchar not null CONSTRAINT password_size check (length(user_password) > 5 and length(user_password) < 50),
                    user_role varchar not null,
                    user_name varchar not null CONSTRAINT name_size check (length(user_name) >= 2 and length(user_name) <= 30),
                    user_surname varchar not null CONSTRAINT surname_size check (length(user_name) >= 2 and length(user_name) <= 30),
                    user_date_of_birth date not null,
                    activation_code varchar,
                    avatar varchar,
                    count_stars int CONSTRAINT stars_constraint check (count_stars >= 0 and man.count_stars <= 5),
                    telegram_link varchar
);

create table item(
                     item_id int primary key generated by default as identity,
                     item_name varchar not null CONSTRAINT item_name_size check (length(item_name) >= 5 and length(item_name) <= 40),
                     item_describe varchar not null CONSTRAINT item_describe_size check (length(item_describe) >= 10 and length(item_describe) <= 500),
                     item_avatar varchar not null ,
                     user_id int,
                     buyer_id int,
                     item_avatar2 varchar,
                     item_avatar3 varchar,
                     checked varchar not null,
                     date_of_create timestamp not null,
                     date_of_last_update timestamp, /* Надо изменить сущность */
                     item_price int CONSTRAINT item_price_constraint check (item_price >= 0), /* Надо изменить сущность */
                     is_sold bool not null,
                     item_date_of_sale timestamp,
                     CONSTRAINT user_id_for_item_constraint FOREIGN KEY (user_id) references man(user_id) on DELETE CASCADE,
                     CONSTRAINT buyer_id_for_item_constraint FOREIGN KEY (buyer_id) references man(user_id) on DELETE CASCADE
);

create table comment(
                        comment_id int primary key generated by default as identity,
                        comment_text varchar CONSTRAINT comment_text_size check (length(comment_text) >= 5 and length(comment_text) <= 100),
                        item_id int,
                        user_id int,
                        comment_date_of_create timestamp,
                        CONSTRAINT item_id_for_comment_constraint FOREIGN KEY (item_id) REFERENCES item(item_id) on DELETE CASCADE,
                        CONSTRAINT user_id_fot_comment_constraint FOREIGN KEY (user_id) REFERENCES man(user_id) on DELETE CASCADE
);

create table purchase_request(
                                 purchase_request_id int primary key generated by default as identity,
                                 item_id int,
                                 user_id int,
                                 CONSTRAINT item_id_for_purchase_request_constraint FOREIGN KEY (item_id) REFERENCES item(item_id) on DELETE CASCADE,
                                 CONSTRAINT user_id_for_purchase_request_constraint FOREIGN KEY (user_id) REFERENCES man(user_id) on DELETE CASCADE
);

create table feedback(
                         feedback_id int primary key generated by default as identity,
                         man_to_id int,
                         man_from_id int,
                         rating int CONSTRAINT rating_constraint check (rating >= 1 and rating <= 5),
                         feedback_text varchar CONSTRAINT feedback_text_size check (length(feedback_text) >= 5 and length(feedback_text) <= 300),
                         feedback_date_of_create timestamp,
                         CONSTRAINT man_to_id_for_feedback_constraint FOREIGN KEY (man_to_id) REFERENCES man(user_id) on DELETE CASCADE,
                         CONSTRAINT man_from_id_for_feedback_constraint FOREIGN KEY (man_from_id) REFERENCES man(user_id) on DELETE CASCADE
);